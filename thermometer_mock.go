// Automatically generated by MockGen. DO NOT EDIT!
// Source: thermometer.go

package main

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of WaterThermometer interface
type MockWaterThermometer struct {
	ctrl     *gomock.Controller
	recorder *_MockWaterThermometerRecorder
}

// Recorder for MockWaterThermometer (not exported)
type _MockWaterThermometerRecorder struct {
	mock *MockWaterThermometer
}

func NewMockWaterThermometer(ctrl *gomock.Controller) *MockWaterThermometer {
	mock := &MockWaterThermometer{ctrl: ctrl}
	mock.recorder = &_MockWaterThermometerRecorder{mock}
	return mock
}

func (_m *MockWaterThermometer) EXPECT() *_MockWaterThermometerRecorder {
	return _m.recorder
}

func (_m *MockWaterThermometer) MeasureAt(place string) (int, error) {
	ret := _m.ctrl.Call(_m, "MeasureAt", place)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockWaterThermometerRecorder) MeasureAt(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MeasureAt", arg0)
}
